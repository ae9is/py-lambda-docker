[project]
name = "py-lambda-docker"
version = "0.0.0"
readme = "README.md"
description = "Boilerplate for Python+Lambda+Docker"
requires-python = ">=3.9, <3.12"
license = {text = "MIT"}
authors = [
  {name = "ae9is", email = "aegis.opensource@gmail.com"}
]
dependencies = []

[project.optional-dependencies]
# Lambda-specific dependencies
healthz = []
torch = [
    "torch @ https://download.pytorch.org/whl/cpu-cxx11-abi/torch-2.2.0%2Bcpu.cxx11.abi-cp311-cp311-linux_x86_64.whl",
    "numpy>=1.26.4", # Required
]

#[project.scripts]
#torchtest = "torchtest.app:main"

# ref: https://github.com/pdm-project/pdm/issues/2189
[tool.pdm.options]
lock = ["--no-cross-platform"]

[tool.pdm]
distribution = false # true

[tool.pdm.scripts]

# Setup and misc
install-all = "pdm install -G:all"
lint = "ruff check src test"
format = "ruff format ."
safety = { shell = "pdm export -o requirements.txt && safety check -r requirements.txt --bare" }
post_install = { shell = """
  pdm export -o requirements.txt && 
  pdm export --prod --group healthz -o src/healthz/requirements.txt && 
  pdm export --prod --group torch -o src/torchtest/requirements.txt
""" }
clean = "rm -rf .venv .pdm-build .pdm-python .ruff_cache dist .aws-sam"

# Build, deploy
pre_sam-build = "sam validate"
sam-build = "sam build"
pre_sam-deploy = "pdm run sam-build"
sam-deploy = "sam deploy --guided"
post_sam-deploy = "sam list endpoints --output json"
docker-login = { shell = """
  aws ecr get-login-password --region $AWS_REGION | 
  docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
""" }

# Local testing
sam-local = "sam local start-lambda"
fwd-sam-local = "flask --app test/localapi/app run"
test = "pytest"

# Aliases
local = "pdm sam-local"
fwd = "pdm fwd-sam-local"

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.2.1",
    "pytest>=8.0.0",
    "safety>=2.3.5",
    "flask>=3.0.2",
    "packaging>=23.2",
]

#[tool.pdm.build]
#excludes = ["./**/.git"]
#package-dir = "src"
#includes = ["src/torchtest/**/*.py"]
#source-includes = ["test", "LICENSE", "README.md", "src/torchtest/requirements.txt"]

[tool.ruff]
exclude = [
  ".git",
  ".venv",
  "__pycache__",
  "*.bak",
  "*.pyc",
]
line-length = 120
indent-width = 2
target-version = "py311"

[tool.ruff.format]
quote-style = "single"
